name: 🏗️ Terraform Plan

on:
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-*.yml'
    branches: [ master ]

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: us-east-1

jobs:
  terraform-plan:
    name: 🔍 Validate & Plan
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: 📋 Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: ./terraform
        continue-on-error: true
        
      - name: ⚡ Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform
        
      - name: ✅ Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./terraform
        
      - name: 📊 Terraform Plan
        id: plan
        run: |
          terraform plan -var-file="environments/dev.tfvars" -no-color -out=tfplan
          terraform show -no-color tfplan > plan_output.txt
        working-directory: ./terraform
        continue-on-error: true
        
      - name: 🔒 Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: './terraform'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: 📝 Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### 🏗️ Terraform Plan Results
            
            #### 📋 Format Check: \`${{ steps.fmt.outcome }}\`
            #### ⚡ Initialization: \`${{ steps.init.outcome }}\`
            #### ✅ Validation: \`${{ steps.validate.outcome }}\`
            #### 📊 Plan: \`${{ steps.plan.outcome }}\`
            
            <details><summary>📄 Show Plan</summary>
            
            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
