terraform {
  required_version = ">= 1.0"
  
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "~> 3.4"
    }
  }
}

provider "aws" {
  region = var.aws_region
  
  default_tags {
    tags = {
      Environment = "dev"
      Project     = var.project_name
      ManagedBy   = "terraform"
    }
  }
}

# Security Module - Create first for IAM roles and KMS keys
module "security" {
  source = "../../modules/security"
  
  project_name = var.project_name
  environment  = "dev"
  aws_region   = var.aws_region
  
  # CI/CD Configuration
  enable_cicd_role         = var.enable_cicd_role
  github_repository        = var.github_repository
  github_oidc_provider_arn = var.github_oidc_provider_arn
  
  # Application parameters for development
  app_parameters = {
    app_name = {
      value  = var.project_name
      secure = false
    }
    log_level = {
      value  = "DEBUG"
      secure = false
    }
    max_connections = {
      value  = "50"  # Lower for dev
      secure = false
    }
    session_timeout = {
      value  = "7200"  # Longer for dev
      secure = false
    }
  }
  
  additional_tags = var.tags
}

# Networking Module
module "networking" {
  source = "../../modules/networking"
  
  project_name = var.project_name
  environment  = "dev"
  
  # VPC Configuration
  vpc_cidr                    = var.vpc_cidr
  public_subnet_cidrs         = var.public_subnet_cidrs
  private_app_subnet_cidrs    = var.private_subnet_cidrs
  private_db_subnet_cidrs     = ["10.0.21.0/24", "10.0.22.0/24"]  # Separate DB subnets
  
  # Application Configuration
  app_port = var.app_port
  
  # Features (cost-optimized for dev)
  enable_nat_gateway   = true   # Needed for ECS tasks to pull images
  enable_vpc_endpoints = false  # Disabled to save costs in dev
  enable_bastion      = false   # Disabled for dev
  single_nat_gateway  = true    # Cost optimization for dev
  
  common_tags = var.tags
}

# Database Module
module "database" {
  source = "../../modules/database"
  
  # Basic Configuration
  project_name = var.project_name
  environment  = "dev"
  
  # Database Configuration
  postgres_version   = var.db_engine_version
  db_instance_class = var.db_instance_class
  
  # Database Details
  db_name     = var.db_name
  db_username = var.db_username
  # Note: Password is auto-generated by the module and stored in Secrets Manager
  
  # Storage Configuration
  allocated_storage     = var.db_allocated_storage
  max_allocated_storage = var.db_max_allocated_storage
  storage_type         = var.db_storage_type
  
  # Security
  kms_key_id = module.security.kms_key_arn
  
  # Network Configuration
  private_db_subnet_ids = module.networking.private_db_subnet_ids
  rds_security_group_id = module.networking.rds_security_group_id
  
  # Backup Configuration (relaxed for dev)
  backup_retention_period = 3  # Shorter retention for dev
  backup_window          = var.backup_window
  maintenance_window     = var.maintenance_window
  
  # Monitoring (disabled for dev to save costs)
  monitoring_interval             = 0
  enabled_cloudwatch_logs_exports = []
  
  # High Availability (disabled for dev)
  multi_az = false
  
  # Security
  deletion_protection = false  # Allow deletion in dev
  skip_final_snapshot = true   # Skip final snapshot in dev
  
  # Performance (disabled for dev)
  performance_insights_enabled = false
  
  common_tags = var.tags
}

# S3 Static Website Module
module "s3_static_website" {
  source = "../../modules/s3-static-website"
  
  bucket_name = "${var.project_name}-dev-static-website"
  
  # S3 Configuration
  versioning_enabled = true
  enable_public_access = true
  enable_website_hosting = true
  
  # CloudFront configuration with custom domain
  enable_cloudfront = true
  cloudfront_aliases = [module.route53.app_fqdn]
  ssl_certificate_arn = module.route53.certificate_arn
  enable_spa_routing = true

  tags = var.tags
}

# Route 53 Module
module "route53" {
  source = "../../modules/route53"
  
  project_name = var.project_name
  environment  = "dev"
  
  # Domain configuration for dev
  domain_name   = var.domain_name
  app_subdomain = "dev-app"  # dev-app.nurlanskillup.pp.ua
  api_subdomain = "dev-api"  # dev-api.nurlanskillup.pp.ua
  
  # ALB integration for API
  alb_dns_name = module.ecs.alb_dns_name
  alb_zone_id  = module.ecs.alb_zone_id
  
  # CloudFront integration for frontend
  cloudfront_domain_name = module.s3_static_website.cloudfront_domain_name
  cloudfront_zone_id = module.s3_static_website.cloudfront_hosted_zone_id
  use_cloudfront_for_app = true
  
  # Health checks (disabled for dev to save costs)
  enable_health_check = false
  
  aws_region = var.aws_region
}

# ECS Module
module "ecs" {
  source = "../../modules/ECS"
  
  project_name = var.project_name
  environment  = "dev"
  
  # VPC Configuration
  vpc_id                   = module.networking.vpc_id
  private_app_subnet_ids   = module.networking.private_app_subnet_ids
  public_subnet_ids        = module.networking.public_subnet_ids
  
  # Security Groups
  alb_security_group_id = module.networking.alb_security_group_id
  ecs_security_group_id = module.networking.ecs_security_group_id
  
  # Certificate for HTTPS
  certificate_arn = module.route53.certificate_arn
  enable_https = true
  enable_https_redirect = true
  
  # Container Configuration
  app_image_tag = "latest"
  app_port      = var.app_port
  task_cpu      = 256   # Lower for dev
  task_memory   = 512   # Lower for dev
  
  # Auto Scaling (minimal for dev)
  enable_autoscaling = true
  autoscaling_min_capacity = 1
  autoscaling_max_capacity = 2
  desired_count = 1
  
  # Database connection using Secrets Manager
  db_credentials_secret_arn = module.database.db_credentials_secret_arn
  
  # Application secrets
  app_secrets_arn = module.security.app_secrets_arn
  
  # Application configuration
  cors_origins = var.cors_origins
  health_check_path = var.health_check_path
  
  # Monitoring (disabled for dev to save costs)
  enable_container_insights = false
  enable_cloudwatch_alarms = false
  enable_cloudwatch_dashboard = false
  log_retention_days = 3
  
  # ALB Configuration
  enable_deletion_protection = false  # Allow deletion in dev
  
  common_tags = var.tags
}
